{"version":3,"sources":["constants/months.js","constants/days.js","views/calendarView/components/headBar.js","components/confirmationModal.js","views/calendarView/components/reminderForm.js","views/calendarView/components/reminderInfo.js","views/calendarView/components/day.js","views/calendarView/components/daysHeader.js","views/calendarView/components/month.js","views/calendarView/index.js","index.js"],"names":["module","exports","withStyles","theme","appBar","backgroundColor","palette","common","white","toolbar","display","justifyContent","monthYearText","fontWeight","classes","month","year","className","root","AppBar","position","Toolbar","Typography","variant","color","monthsNames","title","fontSize","marginLeft","spacing","marginRight","paper","width","background","border","boxShadow","shadows","padding","top","left","transform","onCancel","onConfirm","Modal","open","onClose","aria-labelledby","aria-describedby","gutterBottom","align","Grid","container","direction","justify","alignItems","Button","onClick","ReminderForm","date","saveReminder","reminder","useState","get","setTitle","time","setTime","city","setCity","errorTitle","setErrorTitle","hex","source","setColor","item","TextField","id","label","value","helperText","length","fullWidth","onChange","e","target","error","input","margin","toDateString","type","InputLabelProps","shrink","inputProps","step","newColor","index","defaultProps","flexWrap","subtitle","content","deleteReminder","editReminder","showDeleteConfirmation","setShowDeleteConfirmation","IconButton","aria-label","component","xs","Divider","Card","style","CardContent","sortRemindersByHour","a","b","x","toLowerCase","y","Day","disabled","day","showReminderInfo","setShowReminderInfo","showReminderAddEdit","setShowReminderAddEdit","reminders","setReminders","setReminder","numberHover","setNumberHover","showConfirmDeleteAll","setShowConfirmDeleteAll","reminderDate","Date","addOrEditReminder","reminderToEdit","closeReminderInfo","showDeleteAllRemindersButton","onMouseEnter","onMouseLeave","size","map","reminderIterator","key","clickable","reminderToShow","CardActionArea","Drawer","anchor","drawer","reminderToDelete","splice","newReminder","editedReminder","newReminders","sort","minWidth","borderRadius","height","cursor","days","Month","daysAmount","getDate","firstDay","getDay","lastMonthDaysAmount","Array","getLeftDisabledDays","disabledDay","keys","shift","getNormalDays","disabledAmount","Math","ceil","getRightDisabledDays","CalendarView","selectedMonth","getMonth","selectedYear","getFullYear","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faff4dd8.chunk.js","sourcesContent":["module.exports = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","module.exports = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, withStyles } from '@material-ui/core';\nimport monthsNames from 'constants/months';\n\nconst styles = (theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  monthYearText: {\n    fontWeight: 300,\n  },\n});\n\nconst HeadBar = ({ classes, month, year }) => (\n  <div className={classes.root}>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <Typography\n            variant=\"h4\"\n            className={classes.monthYearText}\n            display=\"inline\"\n            color=\"primary\"\n          >\n            {`${monthsNames[month]} ${year}`}\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nHeadBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(HeadBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 20,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n});\n\nconst ConfirmationModal = ({ classes, title, onCancel, onConfirm }) => (\n  <Modal\n    open\n    onClose={onCancel}\n    aria-labelledby=\"delete-reminder\"\n    aria-describedby=\"delete-reminder\"\n  >\n    <div className={classes.paper}>\n      <Typography className={classes.title} gutterBottom align=\"center\">\n        {title}\n      </Typography>\n      <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\n          Confirm\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </Grid>\n    </div>\n  </Modal>\n);\n\nConfirmationModal.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, TextField, Button, Typography } from '@material-ui/core';\nimport { CirclePicker } from 'react-color';\nimport { get } from 'lodash';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 13,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderForm = ({ classes, date, saveReminder, reminder }) => {\n  const [title, setTitle] = useState(get(reminder, 'title', ''));\n  const [time, setTime] = useState(get(reminder, 'time', '09:30'));\n  const [city, setCity] = useState(get(reminder, 'city', ''));\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [color, setColor] = useState(\n    get(reminder, 'color', {\n      hex: '#607d8b',\n      source: 'hex',\n    })\n  );\n\n  const cleanState = () => {\n    setTitle('');\n    setTime('09:30');\n    setCity('');\n    setColor({\n      hex: '#607d8b',\n      source: 'hex',\n    });\n  };\n\n  const onSaveReminder = () => {\n    if (title.length <= 0) {\n      setErrorTitle(true);\n    }\n\n    if (title.length <= 30 && title.length > 0) {\n      saveReminder({\n        title,\n        time,\n        date,\n        city,\n        color,\n        index: get(reminder, 'index', null),\n      });\n      cleanState();\n    }\n  };\n\n  const changeTitle = (e) => {\n    setErrorTitle(e.target.value.length > 30);\n    setTitle(e.target.value);\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"title-input\"\n          label=\"Title\"\n          value={title}\n          helperText={`${title.length}/30`}\n          fullWidth\n          onChange={changeTitle}\n          error={errorTitle}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${date.toDateString()}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"hour-input\"\n          label=\"Hour\"\n          type=\"time\"\n          fullWidth\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          className={classes.input}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300,\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"city-input\"\n          label=\"City\"\n          value={city}\n          fullWidth\n          onChange={(e) => setCity(e.target.value)}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${'Color'}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <CirclePicker onChange={(newColor) => setColor(newColor)} color={color} />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onSaveReminder}>\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nReminderForm.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  saveReminder: PropTypes.func.isRequired,\n  reminder: PropTypes.instanceOf(Object),\n};\n\nReminderForm.defaultProps = {\n  reminder: {},\n};\n\nexport default withStyles(styles)(ReminderForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography, IconButton, Card, CardContent } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EventIcon from '@material-ui/icons/EventOutlined';\nimport PlaceIcon from '@material-ui/icons/PlaceOutlined';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport PaletteIcon from '@material-ui/icons/PaletteOutlined';\nimport ConfirmationModal from 'components/confirmationModal';\nimport { get } from 'lodash';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 25,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  subtitle: {\n    fontSize: 20,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  content: {\n    fontSize: 15,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderInfo = ({ classes, reminder, deleteReminder, editReminder }) => {\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n\n  const onConfirmDelete = () => {\n    setShowDeleteConfirmation(false);\n    deleteReminder(reminder);\n  };\n\n  const onCancelDelete = () => setShowDeleteConfirmation(false);\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={editReminder}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={() => setShowDeleteConfirmation(true)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            {reminder.title}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Date\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <EventIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.date.toDateString()}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Hour\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <QueryBuilderIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${get(reminder, 'time', '')}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            City\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PlaceIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.city === '' ? 'Unspecified' : reminder.city}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Color\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PaletteIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Card style={{ backgroundColor: reminder.color.hex }}>\n              <CardContent />\n            </Card>\n          </Grid>\n        </Grid>\n        <Divider />\n      </Grid>\n      {showDeleteConfirmation && (\n        <ConfirmationModal\n          title=\"Are you sure you want to delete this reminder?\"\n          onConfirm={onConfirmDelete}\n          onCancel={onCancelDelete}\n        />\n      )}\n    </>\n  );\n};\n\nReminderInfo.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  reminder: PropTypes.instanceOf(Object).isRequired,\n  deleteReminder: PropTypes.func.isRequired,\n  editReminder: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ReminderInfo);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Drawer,\n  IconButton,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport ConfirmationModal from 'components/confirmationModal';\nimport ReminderFrom from './reminderForm';\nimport ReminderInfo from './reminderInfo';\n\nconst drawerWidth = 300;\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    borderRadius: 0,\n    height: '16.75vh',\n  },\n  content: {\n    padding: '0px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n});\n\nconst sortRemindersByHour = (a, b) => {\n  const x = a.time.toLowerCase();\n  const y = b.time.toLowerCase();\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  return 0;\n};\n\nconst Day = ({ classes, disabled, day, month, year }) => {\n  const [showReminderInfo, setShowReminderInfo] = useState(false);\n  const [showReminderAddEdit, setShowReminderAddEdit] = useState(false);\n  const [reminders, setReminders] = useState([]);\n  const [reminder, setReminder] = useState(null);\n  const [numberHover, setNumberHover] = useState(false);\n  const [showConfirmDeleteAll, setShowConfirmDeleteAll] = useState(false);\n  const reminderDate = new Date(year, month, day);\n\n  const addOrEditReminder = (reminderToEdit) => {\n    setReminder(reminderToEdit);\n    setShowReminderAddEdit(true);\n    setShowReminderInfo(false);\n  };\n\n  const saveReminder = (newReminder) => {\n    if (!reminder) {\n      const newReminders = [...reminders, newReminder];\n      newReminders.sort(sortRemindersByHour);\n      setReminders(newReminders);\n    } else {\n      const editedReminder = { ...newReminder };\n      delete editedReminder.index;\n      const newReminders = [...reminders];\n      newReminders[newReminder.index] = editedReminder;\n      newReminders.sort(sortRemindersByHour);\n      setReminders([...newReminders]);\n    }\n    setShowReminderAddEdit(false);\n  };\n\n  const closeReminderInfo = () => {\n    setReminder(null);\n    setShowReminderInfo(false);\n    setShowReminderAddEdit(false);\n  };\n\n  const showReminderInfoDrawer = (reminderToShow) => {\n    setReminder(reminderToShow);\n    setShowReminderInfo(true);\n    setShowReminderAddEdit(false);\n  };\n\n  const deleteReminder = (reminderToDelete) => {\n    closeReminderInfo();\n    reminders.splice(reminderToDelete.index, 1);\n    setReminders([...reminders]);\n  };\n\n  const showDeleteAllRemindersButton = () => numberHover && reminders.length > 0 && !disabled;\n\n  const deleteAllReminders = () => {\n    setShowConfirmDeleteAll(false);\n    setReminders([]);\n  };\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent className={classes.content}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom={!showDeleteAllRemindersButton()}\n              align=\"center\"\n              onMouseEnter={() => setNumberHover(true)}\n              onMouseLeave={() => setNumberHover(false)}\n            >\n              {showDeleteAllRemindersButton() ? (\n                <IconButton\n                  aria-label=\"delete\"\n                  className={classes.margin}\n                  size=\"small\"\n                  onClick={() => setShowConfirmDeleteAll(true)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              ) : (\n                day\n              )}\n            </Typography>\n            {!disabled &&\n              reminders.map((reminderIterator, index) => (\n                <Card\n                  key={`${reminderIterator.title}-${index}`}\n                  style={{ backgroundColor: reminderIterator.color.hex }}\n                  className={classes.clickable}\n                  onClick={() => showReminderInfoDrawer({ ...reminderIterator, index })}\n                >\n                  {/* TODO: COMING SOON: New component */}\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    {reminderIterator.title}\n                  </Typography>\n                </Card>\n              ))}\n          </Grid>\n        </CardContent>\n        {!disabled && (\n          <CardActionArea onClick={() => addOrEditReminder(null)}>\n            <CardContent />\n          </CardActionArea>\n        )}\n      </Card>\n      {showConfirmDeleteAll && (\n        <ConfirmationModal\n          onConfirm={deleteAllReminders}\n          onCancel={() => setShowConfirmDeleteAll(false)}\n          title=\"Are you sure you want to delete ALL the reminders for this day?\"\n        />\n      )}\n      <Drawer\n        open={showReminderInfo || showReminderAddEdit}\n        anchor=\"right\"\n        onClose={closeReminderInfo}\n        classes={{ paper: classes.drawer }}\n      >\n        {showReminderInfo && (\n          <ReminderInfo\n            reminder={reminder}\n            editReminder={() => addOrEditReminder(reminder)}\n            deleteReminder={deleteReminder}\n          />\n        )}\n        {showReminderAddEdit && (\n          <ReminderFrom date={reminderDate} reminder={reminder} saveReminder={saveReminder} />\n        )}\n      </Drawer>\n    </>\n  );\n};\n\nDay.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  disabled: PropTypes.bool,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nDay.defaultProps = {\n  disabled: false,\n  month: 0,\n  year: 0,\n};\n\nexport default withStyles(styles)(Day);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport days from 'constants/days';\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    'max-height': '5vh',\n    'border-radius': 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n});\n\nconst DaysHeader = ({ classes }) =>\n  days.map((day) => (\n    <Card key={`header-${day}`} className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {day}\n        </Typography>\n      </CardContent>\n    </Card>\n  ));\n\nDaysHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Day from './day';\nimport DaysHeader from './daysHeader';\n\nconst Month = ({ month, year }) => {\n  const actualMonth = new Date(year, month + 1, 0);\n  const daysAmount = actualMonth.getDate();\n  const actualMonthFirstDay = new Date(year, month, 1);\n  const firstDay = actualMonthFirstDay.getDay();\n\n  const getLeftDisabledDays = () => {\n    const newMonth = month > 0 ? month : 12;\n    const lastMonth = new Date(year, newMonth, 0);\n    const lastMonthDaysAmount = lastMonth.getDate();\n\n    return [...Array(firstDay)].map((item, index) => lastMonthDaysAmount - firstDay + 1 + index);\n  };\n\n  const getNormalDays = () => {\n    const days = [...Array(daysAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getRightDisabledDays = () => {\n    const nextSevenMultiplo = Math.ceil((daysAmount + firstDay) / 7) * 7;\n    const disabledAmount = nextSevenMultiplo - (daysAmount + firstDay);\n\n    const days = [...Array(disabledAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\n      <DaysHeader />\n      {getLeftDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n      {getNormalDays().map((day) => (\n        <Day key={`enabled-${day}`} day={day} month={month} year={year} />\n      ))}\n      {getRightDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n    </Grid>\n  );\n};\n\nMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default Month;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport HeadBar from './components/headBar';\nimport Month from './components/month';\n\nconst CalendarView = () => {\n  const getActualMonth = () => {\n    const actualDate = new Date();\n    return actualDate.getMonth();\n  };\n  const getActualYear = () => {\n    const actualDate = new Date();\n    return actualDate.getFullYear();\n  };\n\n  const selectedMonth = getActualMonth();\n  const selectedYear = getActualYear();\n\n  return (\n    <React.Fragment>\n      <HeadBar month={selectedMonth} year={selectedYear} />\n      <Toolbar />\n      <Month month={selectedMonth} year={selectedYear} />\n    </React.Fragment>\n  );\n};\n\nexport default CalendarView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarView from './views/calendarView';\n\nconst root = <CalendarView />;\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}