{"version":3,"sources":["constants/months.js","constants/days.js","contexts/remindersContext.js","views/calendarView/components/headBar.js","components/confirmationModal.js","views/calendarView/components/weather.js","views/calendarView/components/reminderForm.js","views/calendarView/components/reminderInfo.js","views/calendarView/components/reminders.js","views/calendarView/components/day.js","views/calendarView/components/daysHeader.js","views/calendarView/components/month.js","views/calendarView/index.js","index.js"],"names":["module","exports","long","short","ReminderContext","createContext","withStyles","theme","appBar","backgroundColor","palette","common","white","toolbar","display","justifyContent","monthYearText","fontWeight","classes","month","year","setNewMonth","setNewYear","onChangeMonth","newMonth","AppBar","position","className","Toolbar","Typography","variant","color","monthsNames","IconButton","aria-label","onClick","title","fontSize","marginLeft","spacing","marginRight","paper","width","background","border","boxShadow","shadows","padding","top","left","transform","onCancel","onConfirm","Modal","open","onClose","aria-labelledby","aria-describedby","gutterBottom","align","Grid","container","direction","justify","alignItems","Button","apiDomain","DaysHeader","day","city","actualDate","Date","setHours","weatherDate","useState","weather","setWeather","fetchWeather","useCallback","diffDays","moment","diff","cityAux","split","isBefore","fetch","process","REACT_APP_WEATHER_API_KEY","then","response","json","myJson","newWeather","get","find","weatherIterator","date","isSame","condition","max_temp","min_temp","current_temp","isAfter","format","temp_c","useEffect","Card","key","weatherCard","CardContent","item","xs","Avatar","alt","src","subtitle","defaultProps","ReminderForm","saveReminder","reminder","setTitle","time","setTime","setCity","errorTitle","setErrorTitle","cities","setCities","setCityAux","hex","source","setColor","fetchCities","length","TextField","id","label","value","helperText","fullWidth","onChange","e","target","error","input","margin","toDateString","type","InputLabelProps","shrink","inputProps","step","Autocomplete","options","getOptionLabel","option","name","inputValue","onInputChange","event","newInputValue","undefined","renderInput","params","newColor","index","flexWrap","content","deleteReminder","editReminder","showDeleteConfirmation","setShowDeleteConfirmation","component","Divider","getDate","getMonth","getFullYear","style","popover","minWidth","borderRadius","minHeight","marginBottom","marginTop","clickable","cursor","reminders","showReminderInfo","showRemindersExpanse","setShowReminderExpanse","anchorEl","setAnchorEl","showAllReminders","map","reminderIterator","slice","newAnchorEl","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Box","sortRemindersByHour","a","b","x","toLowerCase","y","Day","disabled","remindersContext","useContext","RemindersContext","setShowReminderInfo","showReminderAddEdit","setShowReminderAddEdit","setReminder","numberHover","setNumberHover","showConfirmDeleteAll","setShowConfirmDeleteAll","reminderDate","allReminders","updateReminders","setReminders","addOrEditReminder","reminderToEdit","closeReminderInfo","showDeleteAllRemindersButton","root","onMouseEnter","onMouseLeave","size","reminderToShow","CardActionArea","height","maxHeight","newAllReminders","assign","Drawer","anchor","drawer","reminderToDelete","splice","newReminder","editedReminder","newReminders","sort","primary","light","shortTitle","breakpoints","up","longTitle","days","Month","daysAmount","firstDay","getDay","lastMonthDaysAmount","Array","getLeftDisabledDays","disabledDay","keys","shift","getNormalDays","disabledAmount","Math","ceil","getRightDisabledDays","CalendarView","setMonth","setYear","remindersDB","setRemindersDB","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adc9dd21.chunk.js","sourcesContent":["module.exports = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","module.exports = [\n  { long: 'Monday', short: 'Sun' },\n  { long: 'Sunday', short: 'Mon' },\n  { long: 'Tuesday', short: 'Tues' },\n  { long: 'Wednesday', short: 'Wed' },\n  { long: 'Thursday', short: 'Thurs' },\n  { long: 'Friday', short: 'Fri' },\n  { long: 'Saturday', short: 'Sat' },\n];\n","import { createContext } from 'react';\n\nconst ReminderContext = createContext({});\n\nexport default ReminderContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, withStyles, IconButton } from '@material-ui/core';\nimport monthsNames from 'constants/months';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst styles = (theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  monthYearText: {\n    fontWeight: 500,\n  },\n});\n\nconst HeadBar = ({ classes, month, year, setNewMonth, setNewYear }) => {\n  const onChangeMonth = (newMonth) => {\n    if (newMonth === 12) {\n      setNewMonth(0);\n      setNewYear(year + 1);\n    } else if (newMonth === -1) {\n      setNewMonth(11);\n      setNewYear(year - 1);\n    } else {\n      setNewMonth(newMonth);\n    }\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <Typography\n            variant=\"h5\"\n            className={classes.monthYearText}\n            display=\"inline\"\n            color=\"primary\"\n          >\n            {`${monthsNames[month]} ${year}`}\n          </Typography>\n        </div>\n        <div>\n          <IconButton aria-label=\"left\" onClick={() => onChangeMonth(month - 1)}>\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton aria-label=\"right\" onClick={() => onChangeMonth(month + 1)}>\n            <ChevronRightIcon />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nHeadBar.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  setNewMonth: PropTypes.func.isRequired,\n  setNewYear: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(HeadBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 20,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n});\n\nconst ConfirmationModal = ({ classes, title, onCancel, onConfirm }) => (\n  <Modal\n    open\n    onClose={onCancel}\n    aria-labelledby=\"delete-reminder\"\n    aria-describedby=\"delete-reminder\"\n  >\n    <div className={classes.paper}>\n      <Typography className={classes.title} gutterBottom align=\"center\">\n        {title}\n      </Typography>\n      <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\n          Confirm\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </Grid>\n    </div>\n  </Modal>\n);\n\nConfirmationModal.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationModal);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Card, CardContent, Typography, Avatar } from '@material-ui/core';\n\nimport moment from 'moment';\nimport { get } from 'lodash';\n\nconst styles = (theme) => ({\n  weatherCard: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  title: {\n    fontSize: 15,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  subtitle: {\n    fontSize: 13,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\nconst apiDomain = 'https://api.weatherapi.com/v1/';\n\nconst DaysHeader = ({ classes, day, month, year, city }) => {\n  const actualDate = new Date();\n  actualDate.setHours(0, 0, 0, 0);\n  const weatherDate = new Date(year, month, day);\n  const [weather, setWeather] = useState(null);\n\n  const fetchWeather = useCallback(() => {\n    if (city !== '') {\n      const diffDays = moment(weatherDate).diff(actualDate, 'days') + 1;\n      const cityAux = city.split(',')[0];\n\n      if (moment(actualDate).isBefore(weatherDate) && diffDays <= 10) {\n        fetch(\n          `${apiDomain}forecast.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cityAux}&days=${diffDays}`\n        )\n          .then((response) => {\n            return response.json();\n          })\n          .then((myJson) => {\n            const weathersAux = get(myJson, 'forecast.forecastday', []);\n            const newWeather = weathersAux.find((weatherIterator) =>\n              moment(weatherIterator.date).isSame(weatherDate)\n            );\n            setWeather({\n              condition: get(newWeather, 'day.condition', {}),\n              max_temp: get(newWeather, 'day.maxtemp_c', null),\n              min_temp: get(newWeather, 'day.mintemp_c', null),\n              current_temp: null,\n            });\n          });\n      }\n\n      if (moment(actualDate).isAfter(weatherDate) && diffDays <= 30) {\n        fetch(\n          `${apiDomain}history.json?key=${\n            process.env.REACT_APP_WEATHER_API_KEY\n          }&q=${cityAux}&dt=${moment(weatherDate).format('YYYY-MM-DD')}`\n        )\n          .then((response) => {\n            return response.json();\n          })\n          .then((myJson) => {\n            const weathersAux = get(myJson, 'forecast.forecastday', []);\n            const newWeather = weathersAux.find((weatherIterator) =>\n              moment(weatherIterator.date).isSame(weatherDate)\n            );\n            setWeather({\n              condition: get(newWeather, 'day.condition', {}),\n              max_temp: get(newWeather, 'day.maxtemp_c', null),\n              min_temp: get(newWeather, 'day.mintemp_c', null),\n              current_temp: null,\n            });\n          });\n      }\n\n      if (moment(actualDate).isSame(weatherDate)) {\n        fetch(`${apiDomain}current.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cityAux}`)\n          .then((response) => {\n            return response.json();\n          })\n          .then((myJson) => {\n            const newWeather = get(myJson, 'current', {});\n            setWeather({\n              condition: get(newWeather, 'condition', {}),\n              max_temp: null,\n              min_temp: null,\n              current_temp: newWeather.temp_c,\n            });\n          });\n      }\n    }\n  }, [city, actualDate, weatherDate]);\n\n  useEffect(() => {\n    fetchWeather();\n  }, [city, fetchWeather]);\n\n  return (\n    weather && (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Card key={`header-${day}`} className={classes.weatherCard}>\n          <CardContent>\n            {weather && (\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={3}>\n                  <Avatar\n                    alt={get(weather, 'condition.text', '')}\n                    src={get(weather, 'condition.icon', '')}\n                  />\n                </Grid>\n                <Grid item xs={9}>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    {get(weather, 'condition.text', '')}\n                  </Typography>\n                  {weather.current_temp ? (\n                    <Typography\n                      className={classes.subtitle}\n                      color=\"textSecondary\"\n                      gutterBottom\n                      align=\"center\"\n                    >\n                      {`Current temp: ${weather.current_temp} °C`}\n                    </Typography>\n                  ) : (\n                    <>\n                      <Typography\n                        className={classes.subtitle}\n                        color=\"textSecondary\"\n                        gutterBottom\n                        align=\"center\"\n                      >\n                        {`Max. temp: ${weather.max_temp} °C`}\n                      </Typography>\n                      <Typography\n                        className={classes.subtitle}\n                        color=\"textSecondary\"\n                        gutterBottom\n                        align=\"center\"\n                      >\n                        {`Min. temp: ${weather.min_temp} °C`}\n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n              </Grid>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  );\n};\n\nDaysHeader.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n  city: PropTypes.string,\n};\n\nDaysHeader.defaultProps = {\n  month: 0,\n  year: 0,\n  city: '',\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, TextField, Button, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CirclePicker } from 'react-color';\nimport { get } from 'lodash';\nimport Weather from './weather';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 15,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderForm = ({ classes, date, saveReminder, reminder, day, month, year }) => {\n  const [title, setTitle] = useState(get(reminder, 'title', ''));\n  const [time, setTime] = useState(get(reminder, 'time', '09:30'));\n  const [city, setCity] = useState(get(reminder, 'city', ''));\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [cities, setCities] = useState([]);\n  const [cityAux, setCityAux] = useState(get(reminder, 'city', ''));\n  const [color, setColor] = useState(\n    get(reminder, 'color', {\n      hex: '#607d8b',\n      source: 'hex',\n    })\n  );\n\n  const cleanState = () => {\n    setTitle('');\n    setTime('09:30');\n    setCity('');\n    setColor({\n      hex: '#607d8b',\n      source: 'hex',\n    });\n  };\n\n  const onSaveReminder = () => {\n    if (title.length <= 0) {\n      setErrorTitle(true);\n    }\n\n    if (title.length <= 30 && title.length > 0) {\n      saveReminder({\n        title,\n        time,\n        date,\n        city,\n        color,\n        index: get(reminder, 'index', null),\n      });\n      cleanState();\n    }\n  };\n\n  const changeTitle = (e) => {\n    setErrorTitle(e.target.value.length > 30);\n    setTitle(e.target.value);\n  };\n\n  const fetchCities = useCallback(() => {\n    if (cityAux.length >= 3) {\n      const apiDomain = `https://api.weatherapi.com/v1/search.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cityAux}`;\n      fetch(apiDomain)\n        .then((response) => {\n          return response.json();\n        })\n        .then((myJson) => {\n          setCities(myJson);\n        });\n    }\n  }, [cityAux]);\n\n  useEffect(() => {\n    fetchCities();\n  }, [cityAux, fetchCities]);\n\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"title-input\"\n          label=\"Title\"\n          value={title}\n          helperText={`${title.length}/30`}\n          fullWidth\n          onChange={changeTitle}\n          error={errorTitle}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${date.toDateString()}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"hour-input\"\n          label=\"Hour\"\n          type=\"time\"\n          fullWidth\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          className={classes.input}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300,\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <Autocomplete\n          id=\"city-auto-input\"\n          options={cities}\n          fullWidth\n          getOptionLabel={(option) => option.name}\n          // helperText=\"At least 3 chars\"\n          className={classes.input}\n          inputValue={cityAux}\n          margin=\"normal\"\n          onInputChange={(event, newInputValue) => {\n            if (event) {\n              if (event.type === 'change') {\n                setCityAux(newInputValue !== undefined ? newInputValue : '');\n              }\n              if (event.type === 'click') {\n                setCity(newInputValue !== undefined ? newInputValue : '');\n                setCityAux(newInputValue !== undefined ? newInputValue : '');\n              }\n            }\n          }}\n          renderInput={(params) => <TextField {...params} label=\"City\" />}\n        />\n      </Grid>\n      {city && (\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n              Weather\n            </Typography>\n          </Grid>\n          <Weather day={day} month={month} year={year} city={city} />\n        </Grid>\n      )}\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          Color\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <CirclePicker onChange={(newColor) => setColor(newColor)} color={color} />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onSaveReminder}>\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nReminderForm.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  saveReminder: PropTypes.func.isRequired,\n  reminder: PropTypes.instanceOf(Object),\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nReminderForm.defaultProps = {\n  reminder: {},\n  month: 0,\n  year: 0,\n};\n\nexport default withStyles(styles)(ReminderForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography, IconButton, Card, CardContent } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EventIcon from '@material-ui/icons/EventOutlined';\nimport PlaceIcon from '@material-ui/icons/PlaceOutlined';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport PaletteIcon from '@material-ui/icons/PaletteOutlined';\nimport ConfirmationModal from 'components/confirmationModal';\nimport { get } from 'lodash';\nimport Divider from '@material-ui/core/Divider';\nimport Weather from './weather';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 20,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  subtitle: {\n    fontSize: 15,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    fontSize: 13,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderInfo = ({ classes, reminder, deleteReminder, editReminder }) => {\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n\n  const onConfirmDelete = () => {\n    setShowDeleteConfirmation(false);\n    deleteReminder(reminder);\n  };\n\n  const onCancelDelete = () => setShowDeleteConfirmation(false);\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={editReminder}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={() => setShowDeleteConfirmation(true)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            {reminder.title}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Date\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <EventIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.date.toDateString()}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Hour\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <QueryBuilderIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${get(reminder, 'time', '')}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            City\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PlaceIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.city === '' ? 'Unspecified' : reminder.city}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        {reminder.city !== '' && (\n          <>\n            <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n              <Typography\n                className={classes.subtitle}\n                color=\"textSecondary\"\n                gutterBottom\n                align=\"center\"\n              >\n                Weather\n              </Typography>\n            </Grid>\n            <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n              <Weather\n                day={reminder.date.getDate()}\n                month={reminder.date.getMonth()}\n                year={reminder.date.getFullYear()}\n                city={reminder.city}\n              />\n            </Grid>\n            <Divider />\n          </>\n        )}\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Color\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PaletteIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Card style={{ backgroundColor: reminder.color.hex }}>\n              <CardContent />\n            </Card>\n          </Grid>\n        </Grid>\n        <Divider />\n      </Grid>\n      {showDeleteConfirmation && (\n        <ConfirmationModal\n          title=\"Are you sure you want to delete this reminder?\"\n          onConfirm={onConfirmDelete}\n          onCancel={onCancelDelete}\n        />\n      )}\n    </>\n  );\n};\n\nReminderInfo.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  reminder: PropTypes.instanceOf(Object).isRequired,\n  deleteReminder: PropTypes.func.isRequired,\n  editReminder: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ReminderInfo);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Card, Typography, Popover, Box } from '@material-ui/core';\n\nconst styles = (theme) => ({\n  popover: {\n    minWidth: '14vw',\n    width: '14vw',\n    borderRadius: 0,\n    minHeight: '10vh',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n});\nconst Reminders = ({ classes, reminders, showReminderInfo }) => {\n  const [showRemindersExpanse, setShowReminderExpanse] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const getRemindersDiff = () => reminders.length - 2;\n\n  const showAllRemindersExpanse = (newAnchorEl) => {\n    setShowReminderExpanse(true);\n    setAnchorEl(newAnchorEl);\n  };\n\n  const showAllReminders = () =>\n    reminders.map((reminderIterator, index) => (\n      <Card\n        key={`${reminderIterator.title}-${index}`}\n        style={{ backgroundColor: reminderIterator.color.hex }}\n        className={classes.clickable}\n        onClick={() => showReminderInfo({ ...reminderIterator, index })}\n      >\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {reminderIterator.title}\n        </Typography>\n      </Card>\n    ));\n\n  return reminders.length > 3 ? (\n    <>\n      {reminders.slice(0, 2).map((reminderIterator, index) => (\n        <Card\n          key={`${reminderIterator.title}-${index}`}\n          style={{ backgroundColor: reminderIterator.color.hex }}\n          className={classes.clickable}\n          onClick={() => showReminderInfo({ ...reminderIterator, index })}\n        >\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            {reminderIterator.title}\n          </Typography>\n        </Card>\n      ))}\n      <Card\n        key=\"more-reminders\"\n        style={{ backgroundColor: '#2196F3' }}\n        className={classes.clickable}\n        onClick={(e) => showAllRemindersExpanse(e.currentTarget)}\n      >\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`+${getRemindersDiff()}`}\n        </Typography>\n      </Card>\n      <Popover\n        id=\"reminders-expanse\"\n        open={showRemindersExpanse}\n        anchorEl={anchorEl}\n        onClose={() => {\n          setShowReminderExpanse(false);\n          setAnchorEl(null);\n        }}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n      >\n        <Box className={classes.popover}>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            Reminders\n          </Typography>\n          {showAllReminders()}\n        </Box>\n      </Popover>\n    </>\n  ) : (\n    showAllReminders()\n  );\n};\n\nReminders.propTypes = {\n  reminders: PropTypes.instanceOf(Array).isRequired,\n  classes: PropTypes.instanceOf(Object).isRequired,\n  showReminderInfo: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Reminders);\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Drawer,\n  IconButton,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport { get, assign } from 'lodash';\nimport RemindersContext from 'contexts/remindersContext';\nimport ConfirmationModal from 'components/confirmationModal';\nimport ReminderFrom from './reminderForm';\nimport ReminderInfo from './reminderInfo';\nimport Reminders from './reminders';\n\nconst drawerWidth = 300;\n\nconst styles = () => ({\n  root: {\n    width: '13%',\n    minWidth: '13%',\n    borderRadius: 0,\n    height: '16.75vh',\n  },\n  content: {\n    padding: '1px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n  disabled: {\n    width: '13%',\n    minWidth: '13%',\n    borderRadius: 0,\n    height: '16.75vh',\n    background: '#EBEBE4',\n  },\n});\n\nconst sortRemindersByHour = (a, b) => {\n  const x = a.time.toLowerCase();\n  const y = b.time.toLowerCase();\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  return 0;\n};\n\nconst Day = ({ classes, disabled, day, month, year }) => {\n  const remindersContext = useContext(RemindersContext);\n  const [showReminderInfo, setShowReminderInfo] = useState(false);\n  const [showReminderAddEdit, setShowReminderAddEdit] = useState(false);\n  const [reminder, setReminder] = useState(null);\n  const [numberHover, setNumberHover] = useState(false);\n  const [showConfirmDeleteAll, setShowConfirmDeleteAll] = useState(false);\n  const reminderDate = new Date(year, month, day);\n  const allReminders = { ...remindersContext };\n  delete allReminders.updateReminders;\n  const reminders = get(remindersContext, `${year}.${month}.${day}`, []);\n  const setReminders = remindersContext.updateReminders;\n\n  const addOrEditReminder = (reminderToEdit) => {\n    setReminder(reminderToEdit);\n    setShowReminderAddEdit(true);\n    setShowReminderInfo(false);\n  };\n\n  const saveReminder = (newReminder) => {\n    if (!reminder) {\n      const newReminders = [...reminders, newReminder];\n      newReminders.sort(sortRemindersByHour);\n      const newAllReminders = { ...allReminders };\n      assign(newAllReminders, {\n        [year]: {\n          ...get(allReminders, `${year}`, {}),\n          [month]: {\n            ...get(allReminders, `${year}.${month}`, {}),\n            [day]: newReminders,\n          },\n        },\n      });\n      setReminders(newAllReminders);\n    } else {\n      const editedReminder = { ...newReminder };\n      delete editedReminder.index;\n      const newReminders = [...reminders];\n      newReminders[newReminder.index] = editedReminder;\n      newReminders.sort(sortRemindersByHour);\n      const newAllReminders = { ...allReminders };\n      assign(newAllReminders, {\n        [year]: {\n          ...get(allReminders, `${year}`, {}),\n          [month]: {\n            ...get(allReminders, `${year}.${month}`, {}),\n            [day]: newReminders,\n          },\n        },\n      });\n      setReminders(newAllReminders);\n    }\n    setShowReminderAddEdit(false);\n  };\n\n  const closeReminderInfo = () => {\n    setReminder(null);\n    setShowReminderInfo(false);\n    setShowReminderAddEdit(false);\n  };\n\n  const showReminderInfoDrawer = (reminderToShow) => {\n    setReminder(reminderToShow);\n    setShowReminderInfo(true);\n    setShowReminderAddEdit(false);\n  };\n\n  const deleteReminder = (reminderToDelete) => {\n    closeReminderInfo();\n    reminders.splice(reminderToDelete.index, 1);\n    const newAllReminders = { ...allReminders };\n    assign(newAllReminders, {\n      [year]: {\n        ...get(allReminders, `${year}`, {}),\n        [month]: {\n          ...get(allReminders, `${year}.${month}`, {}),\n          [day]: reminders,\n        },\n      },\n    });\n    setReminders(newAllReminders);\n  };\n\n  const showDeleteAllRemindersButton = () => numberHover && reminders.length > 0 && !disabled;\n\n  const deleteAllReminders = () => {\n    setShowConfirmDeleteAll(false);\n    const newAllReminders = { ...allReminders };\n    assign(newAllReminders, {\n      [year]: {\n        ...get(allReminders, `${year}`, {}),\n        [month]: {\n          ...get(allReminders, `${year}.${month}`, {}),\n          [day]: [],\n        },\n      },\n    });\n    setReminders(newAllReminders);\n  };\n\n  const cleanState = () => {\n    setShowReminderInfo(false);\n    setShowReminderAddEdit(false);\n    setReminder(null);\n    setNumberHover(false);\n    setShowConfirmDeleteAll(false);\n  };\n\n  useEffect(() => {\n    cleanState();\n  }, [month, year]);\n\n  return (\n    <>\n      <Card className={disabled ? classes.disabled : classes.root} variant=\"outlined\">\n        <CardContent className={classes.content}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom={!showDeleteAllRemindersButton()}\n              align=\"center\"\n              onMouseEnter={() => setNumberHover(true)}\n              onMouseLeave={() => setNumberHover(false)}\n            >\n              {showDeleteAllRemindersButton() ? (\n                <IconButton\n                  aria-label=\"delete\"\n                  className={classes.margin}\n                  size=\"small\"\n                  onClick={() => setShowConfirmDeleteAll(true)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              ) : (\n                day\n              )}\n            </Typography>\n            {!disabled && (\n              <Reminders reminders={reminders} showReminderInfo={showReminderInfoDrawer} />\n            )}\n          </Grid>\n        </CardContent>\n        {!disabled && (\n          <CardActionArea\n            style={{\n              height: `${80 - 20 * (reminders.length >= 3 ? 3 : reminders.length)}%`,\n              maxHeight: `${80 - 20 * (reminders.length >= 3 ? 3 : reminders.length)}%`,\n            }}\n            onClick={() => addOrEditReminder(null)}\n          >\n            <CardContent />\n          </CardActionArea>\n        )}\n      </Card>\n      {showConfirmDeleteAll && (\n        <ConfirmationModal\n          onConfirm={deleteAllReminders}\n          onCancel={() => setShowConfirmDeleteAll(false)}\n          title=\"Are you sure you want to delete ALL the reminders for this day?\"\n        />\n      )}\n      <Drawer\n        open={showReminderInfo || showReminderAddEdit}\n        anchor=\"right\"\n        onClose={closeReminderInfo}\n        classes={{ paper: classes.drawer }}\n      >\n        {showReminderInfo && (\n          <ReminderInfo\n            reminder={reminder}\n            editReminder={() => addOrEditReminder(reminder)}\n            deleteReminder={deleteReminder}\n          />\n        )}\n        {showReminderAddEdit && (\n          <ReminderFrom\n            date={reminderDate}\n            reminder={reminder}\n            saveReminder={saveReminder}\n            day={day}\n            month={month}\n            year={year}\n          />\n        )}\n      </Drawer>\n    </>\n  );\n};\n\nDay.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  disabled: PropTypes.bool,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nDay.defaultProps = {\n  disabled: false,\n  month: 0,\n  year: 0,\n};\n\nexport default withStyles(styles)(Day);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Card, Typography } from '@material-ui/core';\nimport days from 'constants/days';\n\nconst styles = (theme) => ({\n  root: {\n    minWidth: '13%',\n    width: '13%',\n    'max-height': '5vh',\n    'border-radius': 0,\n    background: theme.palette.primary.light,\n  },\n  shortTitle: {\n    display: 'inline',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  longTitle: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'inline',\n    },\n  },\n});\n\nconst DaysHeader = ({ classes }) =>\n  days.map((day) => (\n    <Card key={`header-${day.short}`} className={classes.root} variant=\"outlined\">\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Typography\n          variant=\"subtitle1\"\n          className={classes.longTitle}\n          color=\"textSecondary\"\n          gutterBottom\n          align=\"center\"\n        >\n          {day.long}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          className={classes.shortTitle}\n          color=\"textSecondary\"\n          gutterBottom\n          align=\"center\"\n        >\n          {day.short}\n        </Typography>\n      </Grid>\n    </Card>\n  ));\n\nDaysHeader.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Day from './day';\nimport DaysHeader from './daysHeader';\n\nconst Month = ({ month, year }) => {\n  const actualMonth = new Date(year, month + 1, 0);\n  const daysAmount = actualMonth.getDate();\n  const actualMonthFirstDay = new Date(year, month, 1);\n  const firstDay = actualMonthFirstDay.getDay();\n\n  const getLeftDisabledDays = () => {\n    const newMonth = month > 0 ? month : 12;\n    const lastMonth = new Date(year, newMonth, 0);\n    const lastMonthDaysAmount = lastMonth.getDate();\n\n    return [...Array(firstDay)].map((item, index) => lastMonthDaysAmount - firstDay + 1 + index);\n  };\n\n  const getNormalDays = () => {\n    const days = [...Array(daysAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getRightDisabledDays = () => {\n    const nextSevenMultiplo = Math.ceil((daysAmount + firstDay) / 7) * 7;\n    const disabledAmount = nextSevenMultiplo - (daysAmount + firstDay);\n\n    const days = [...Array(disabledAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\n      <DaysHeader />\n      {getLeftDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n      {getNormalDays().map((day) => (\n        <Day key={`enabled-${day}`} day={day} month={month} year={year} />\n      ))}\n      {getRightDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n    </Grid>\n  );\n};\n\nMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default Month;\n","import React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport RemindersContext from 'contexts/remindersContext';\nimport HeadBar from './components/headBar';\nimport Month from './components/month';\n\nconst CalendarView = () => {\n  const getActualMonth = () => {\n    const actualDate = new Date();\n    return actualDate.getMonth();\n  };\n  const getActualYear = () => {\n    const actualDate = new Date();\n    return actualDate.getFullYear();\n  };\n\n  const [month, setMonth] = useState(getActualMonth());\n  const [year, setYear] = useState(getActualYear);\n  const [remindersDB, setRemindersDB] = useState({});\n\n  return (\n    <>\n      <HeadBar month={month} year={year} setNewMonth={setMonth} setNewYear={setYear} />\n      <Toolbar />\n      <RemindersContext.Provider\n        value={{\n          ...remindersDB,\n          updateReminders: setRemindersDB,\n        }}\n      >\n        <Month month={month} year={year} />\n      </RemindersContext.Provider>\n    </>\n  );\n};\n\nexport default CalendarView;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarView from './views/calendarView';\n\nconst root = <CalendarView />;\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}