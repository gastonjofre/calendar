{"version":3,"sources":["constants/months.js","constants/days.js","views/calendarView/components/headBar.js","views/calendarView/components/day.js","views/calendarView/components/daysHeader.js","views/calendarView/components/month.js","views/calendarView/index.js","index.js"],"names":["module","exports","withStyles","theme","appBar","backgroundColor","palette","common","white","toolbar","display","justifyContent","monthYearText","fontWeight","classes","month","year","className","root","AppBar","position","Toolbar","Typography","variant","color","monthsNames","minWidth","height","title","fontSize","day","Card","CardContent","gutterBottom","align","days","map","key","Month","daysAmount","Date","getDate","firstDay","getDay","Grid","container","direction","justify","alignItems","spacing","lastMonthDaysAmount","Array","item","index","getLeftDisabledDays","disabledDay","disabled","keys","shift","getNormalDays","disabledAmount","Math","ceil","getRightDisabledDays","CalendarView","selectedMonth","getMonth","selectedYear","getFullYear","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a191d57.chunk.js","sourcesContent":["module.exports = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","module.exports = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, withStyles } from '@material-ui/core';\nimport monthsNames from 'constants/months';\n\nconst styles = (theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  monthYearText: {\n    fontWeight: 300,\n  },\n});\n\nconst HeadBar = ({ classes, month, year }) => (\n  <div className={classes.root}>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <Typography\n            variant=\"h4\"\n            className={classes.monthYearText}\n            display=\"inline\"\n            color=\"primary\"\n          >\n            {`${monthsNames[month]} ${year}`}\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nHeadBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(HeadBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    'border-radius': 0,\n    height: '16.75vh',\n  },\n  title: {\n    fontSize: 14,\n  },\n});\n\nconst Day = ({ classes, day }) => {\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {day}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nDay.propTypes = {\n  classes: PropTypes.object.isRequired,\n  day: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(Day);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport days from 'constants/days';\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    'max-height': '5vh',\n    'border-radius': 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n});\n\nconst DaysHeader = ({ classes }) =>\n  days.map((day) => (\n    <Card key={`header-${day}`} className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {day}\n        </Typography>\n      </CardContent>\n    </Card>\n  ));\n\nDaysHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Day from './day';\nimport DaysHeader from './daysHeader';\n\nconst Month = ({ month, year }) => {\n  const actualMonth = new Date(year, month + 1, 0);\n  const daysAmount = actualMonth.getDate();\n  const actualMonthFirstDay = new Date(year, month, 1);\n  const firstDay = actualMonthFirstDay.getDay();\n\n  const getLeftDisabledDays = () => {\n    const newMonth = month > 0 ? month : 12;\n    const lastMonth = new Date(year, newMonth, 0);\n    const lastMonthDaysAmount = lastMonth.getDate();\n\n    return [...Array(firstDay)].map((item, index) => lastMonthDaysAmount - firstDay + 1 + index);\n  };\n\n  const getNormalDays = () => {\n    const days = [...Array(daysAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getRightDisabledDays = () => {\n    const nextSevenMultiplo = Math.ceil((daysAmount + firstDay) / 7) * 7;\n    const disabledAmount = nextSevenMultiplo - (daysAmount + firstDay);\n\n    const days = [...Array(disabledAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\n      <DaysHeader />\n      {getLeftDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n      {getNormalDays().map((day) => (\n        <Day key={`enabled-${day}`} day={day} />\n      ))}\n      {getRightDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n    </Grid>\n  );\n};\n\nMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default Month;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport HeadBar from './components/headBar';\nimport Month from './components/month';\n\nconst CalendarView = () => {\n  const getActualMonth = () => {\n    const actualDate = new Date();\n    return actualDate.getMonth();\n  };\n  const getActualYear = () => {\n    const actualDate = new Date();\n    return actualDate.getFullYear();\n  };\n\n  const selectedMonth = getActualMonth();\n  const selectedYear = getActualYear();\n\n  return (\n    <React.Fragment>\n      <HeadBar month={selectedMonth} year={selectedYear} />\n      <Toolbar />\n      <Month month={selectedMonth} year={selectedYear} />\n    </React.Fragment>\n  );\n};\n\nexport default CalendarView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarView from './views/calendarView';\n\nconst root = <CalendarView />;\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}