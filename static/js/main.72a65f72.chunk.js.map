{"version":3,"sources":["constants/months.js","constants/days.js","contexts/remindersContext.js","views/calendarView/components/headBar.js","components/confirmationModal.js","views/calendarView/components/weather.js","views/calendarView/components/reminderForm.js","views/calendarView/components/reminderInfo.js","views/calendarView/components/reminders.js","views/calendarView/components/day.js","views/calendarView/components/daysHeader.js","views/calendarView/components/month.js","views/calendarView/index.js","index.js"],"names":["module","exports","long","short","ReminderContext","createContext","withStyles","theme","appBar","backgroundColor","palette","common","white","toolbar","display","justifyContent","monthYearText","fontWeight","changeMonth","marginLeft","spacing","marginRight","classes","month","year","setNewMonth","setNewYear","onChangeMonth","newMonth","AppBar","position","className","Toolbar","Typography","variant","color","monthsNames","IconButton","aria-label","onClick","ConfirmationModal","title","onCancel","onConfirm","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogActions","Button","autoFocus","apiDomain","DaysHeader","day","city","Date","setHours","useState","weather","setWeather","fetchWeather","useCallback","actualDateAux","weatherDateAux","diffDays","moment","diff","cityAux","split","isBefore","fetch","process","then","response","json","myJson","newWeather","get","find","weatherIterator","date","isSame","condition","max_temp","min_temp","current_temp","isAfter","format","temp_c","useEffect","Grid","container","direction","justify","alignItems","Card","key","weatherCard","item","xs","Avatar","alt","src","gutterBottom","align","subtitle","warning","defaultProps","boxShadow","shadows","fontSize","marginTop","marginBottom","ReminderForm","saveReminder","reminder","setTitle","time","setTime","setCity","errorTitle","setErrorTitle","cities","setCities","setCityAux","hex","source","setColor","fetchCities","length","TextField","label","value","helperText","fullWidth","onChange","e","target","error","input","margin","toDateString","type","InputLabelProps","shrink","inputProps","step","Autocomplete","options","getOptionLabel","option","name","inputValue","onInputChange","event","newInputValue","undefined","renderInput","params","newColor","index","flexWrap","width","content","deleteReminder","editReminder","showDeleteConfirmation","setShowDeleteConfirmation","component","Divider","getDate","getMonth","getFullYear","style","CardContent","popover","minWidth","borderRadius","minHeight","clickable","cursor","reminders","showReminderInfo","showRemindersExpanse","setShowReminderExpanse","anchorEl","setAnchorEl","showAllReminders","map","reminderIterator","slice","newAnchorEl","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Box","sortRemindersByHour","a","b","x","toLowerCase","y","Day","disabled","height","remindersContext","useContext","RemindersContext","setShowReminderInfo","showReminderAddEdit","setShowReminderAddEdit","setReminder","numberHover","setNumberHover","showConfirmDeleteAll","setShowConfirmDeleteAll","reminderDate","allReminders","updateReminders","setReminders","addOrEditReminder","reminderToEdit","closeReminderInfo","showDeleteAllRemindersButton","getHeightAction","heightAction","diffLength","root","onMouseEnter","onMouseLeave","size","acutalDay","isActualDay","actualDay","reminderToShow","CardActionArea","maxHeight","newAllReminders","assign","Drawer","anchor","paper","drawer","reminderToDelete","splice","newReminder","editedReminder","newReminders","sort","padding","background","primary","light","shortTitle","up","longTitle","days","Month","daysAmount","firstDay","getDay","getLeftDisabledDays","lastMonthDaysAmount","Array","getNormalDays","keys","shift","getRightDisabledDays","disabledAmount","Math","ceil","getHeight","disabledDay","CalendarView","setMonth","setYear","remindersDB","setRemindersDB","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72a65f72.chunk.js","sourcesContent":["module.exports = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","module.exports = [\n  { long: 'Sunday', short: 'Sun' },\n  { long: 'Monday', short: 'Mon' },\n  { long: 'Tuesday', short: 'Tues' },\n  { long: 'Wednesday', short: 'Wed' },\n  { long: 'Thursday', short: 'Thurs' },\n  { long: 'Friday', short: 'Fri' },\n  { long: 'Saturday', short: 'Sat' },\n];\n","import { createContext } from 'react';\n\nconst ReminderContext = createContext({});\n\nexport default ReminderContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, withStyles, IconButton } from '@material-ui/core';\nimport monthsNames from 'constants/months';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst styles = (theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  monthYearText: {\n    fontWeight: 500,\n  },\n  changeMonth: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n});\n\nconst HeadBar = ({ classes, month, year, setNewMonth, setNewYear }) => {\n  const onChangeMonth = (newMonth) => {\n    if (newMonth === 12) {\n      setNewMonth(0);\n      setNewYear(year + 1);\n    } else if (newMonth === -1) {\n      setNewMonth(11);\n      setNewYear(year - 1);\n    } else {\n      setNewMonth(newMonth);\n    }\n  };\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <Typography\n            variant=\"h5\"\n            className={classes.monthYearText}\n            display=\"inline\"\n            color=\"primary\"\n          >\n            {`${monthsNames[month]} ${year}`}\n          </Typography>\n        </div>\n        <div>\n          <IconButton\n            aria-label=\"left\"\n            className={classes.changeMonth}\n            onClick={() => onChangeMonth(month - 1)}\n          >\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton aria-label=\"right\" onClick={() => onChangeMonth(month + 1)}>\n            <ChevronRightIcon />\n          </IconButton>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nHeadBar.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  setNewMonth: PropTypes.func.isRequired,\n  setNewYear: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(HeadBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog, DialogActions, DialogTitle } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst ConfirmationModal = ({ title, onCancel, onConfirm }) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open\n      onClose={onCancel}\n      aria-labelledby=\"responsive-confirmation\"\n    >\n      <DialogTitle id=\"responsive-confirmation-title\">{title}</DialogTitle>\n      <DialogActions>\n        <Button autoFocus onClick={onCancel} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={onConfirm} color=\"primary\" autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationModal;\n","/* eslint-disable no-undef */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Card, Typography, Avatar } from '@material-ui/core';\n\nimport moment from 'moment';\nimport { get } from 'lodash';\n\nconst styles = (theme) => ({\n  weatherCard: {\n    boxShadow: theme.shadows[5],\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  title: {\n    fontSize: 15,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  subtitle: {\n    fontSize: 13,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  warning: {\n    fontSize: 15,\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n  },\n});\nconst apiDomain = 'https://api.weatherapi.com/v1/';\n\nconst DaysHeader = ({ classes, day, month, year, city }) => {\n  const actualDate = new Date();\n  actualDate.setHours(0, 0, 0, 0);\n  const [weather, setWeather] = useState(null);\n\n  const fetchWeather = useCallback(() => {\n    if (city !== '') {\n      const actualDateAux = new Date();\n      actualDateAux.setHours(0, 0, 0, 0);\n      const weatherDateAux = new Date(year, month, day);\n      const diffDays = moment(weatherDateAux).diff(actualDateAux, 'days') + 1;\n      const cityAux = city.split(',')[0];\n\n      if (moment(actualDateAux).isBefore(weatherDateAux) && diffDays <= 10) {\n        fetch(\n          `${apiDomain}forecast.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cityAux}&days=${diffDays}`\n        )\n          .then((response) => {\n            return response.json();\n          })\n          .then((myJson) => {\n            if (!('error' in myJson)) {\n              const weathersAux = get(myJson, 'forecast.forecastday', []);\n              const newWeather = weathersAux.find((weatherIterator) =>\n                moment(weatherIterator.date).isSame(weatherDateAux)\n              );\n              if (newWeather) {\n                setWeather({\n                  condition: get(newWeather, 'day.condition', {}),\n                  max_temp: get(newWeather, 'day.maxtemp_c', null),\n                  min_temp: get(newWeather, 'day.mintemp_c', null),\n                  current_temp: null,\n                });\n              }\n            }\n          });\n      }\n\n      if (moment(actualDateAux).isAfter(weatherDateAux) && diffDays <= 30) {\n        fetch(\n          `${apiDomain}history.json?key=${\n            process.env.REACT_APP_WEATHER_API_KEY\n          }&q=${cityAux}&dt=${moment(weatherDateAux).format('YYYY-MM-DD')}`\n        )\n          .then((response) => {\n            return response.json();\n          })\n          .then((myJson) => {\n            if (!('error' in myJson)) {\n              const weathersAux = get(myJson, 'forecast.forecastday', []);\n              const newWeather = weathersAux.find((weatherIterator) =>\n                moment(weatherIterator.date).isSame(weatherDateAux)\n              );\n              if (newWeather) {\n                setWeather({\n                  condition: get(newWeather, 'day.condition', {}),\n                  max_temp: get(newWeather, 'day.maxtemp_c', null),\n                  min_temp: get(newWeather, 'day.mintemp_c', null),\n                  current_temp: null,\n                });\n              }\n            }\n          });\n      }\n\n      if (moment(actualDateAux).isSame(weatherDateAux)) {\n        fetch(`${apiDomain}current.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cityAux}`)\n          .then((response) => {\n            return response.json();\n          })\n          .then((myJson) => {\n            if (!('error' in myJson)) {\n              const newWeather = get(myJson, 'current', {});\n              setWeather({\n                condition: get(newWeather, 'condition', {}),\n                max_temp: null,\n                min_temp: null,\n                current_temp: newWeather.temp_c,\n              });\n            }\n          });\n      }\n    }\n  }, [city, year, month, day]);\n\n  useEffect(() => {\n    fetchWeather();\n  }, [city, fetchWeather]);\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n      <Card key={`header-${day}`} className={classes.weatherCard}>\n        {weather !== null ? (\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item xs={3}>\n              <Avatar\n                alt={get(weather, 'condition.text', '')}\n                src={get(weather, 'condition.icon', '')}\n              />\n            </Grid>\n            <Grid item xs={9}>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n                align=\"center\"\n              >\n                {get(weather, 'condition.text', '')}\n              </Typography>\n              {weather.current_temp ? (\n                <Typography\n                  className={classes.subtitle}\n                  color=\"textSecondary\"\n                  gutterBottom\n                  align=\"center\"\n                >\n                  {`Current temp: ${weather.current_temp} °C`}\n                </Typography>\n              ) : (\n                <>\n                  <Typography\n                    className={classes.subtitle}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    {`Max. temp: ${weather.max_temp} °C`}\n                  </Typography>\n                  <Typography\n                    className={classes.subtitle}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    {`Min. temp: ${weather.min_temp} °C`}\n                  </Typography>\n                </>\n              )}\n            </Grid>\n          </Grid>\n        ) : (\n          <Typography className={classes.warning} color=\"textSecondary\" gutterBottom align=\"center\">\n            Weather not available for this day\n          </Typography>\n        )}\n      </Card>\n    </Grid>\n  );\n};\n\nDaysHeader.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n  city: PropTypes.string,\n};\n\nDaysHeader.defaultProps = {\n  month: 0,\n  year: 0,\n  city: '',\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, TextField, Button, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { CirclePicker } from 'react-color';\nimport { get } from 'lodash';\nimport Weather from './weather';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 15,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderForm = ({ classes, date, saveReminder, reminder, day, month, year }) => {\n  const [title, setTitle] = useState(get(reminder, 'title', ''));\n  const [time, setTime] = useState(get(reminder, 'time', '09:30'));\n  const [city, setCity] = useState(get(reminder, 'city', ''));\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [cities, setCities] = useState([]);\n  const [cityAux, setCityAux] = useState(get(reminder, 'city', ''));\n  const [color, setColor] = useState(\n    get(reminder, 'color', {\n      hex: '#607d8b',\n      source: 'hex',\n    })\n  );\n\n  const cleanState = () => {\n    setTitle('');\n    setTime('09:30');\n    setCity('');\n    setColor({\n      hex: '#607d8b',\n      source: 'hex',\n    });\n  };\n\n  const onSaveReminder = () => {\n    if (title.length <= 0) {\n      setErrorTitle(true);\n    }\n\n    if (title.length <= 30 && title.length > 0) {\n      saveReminder({\n        title,\n        time,\n        date,\n        city,\n        color,\n        index: get(reminder, 'index', null),\n      });\n      cleanState();\n    }\n  };\n\n  const changeTitle = (e) => {\n    setErrorTitle(e.target.value.length > 30);\n    setTitle(e.target.value);\n  };\n\n  const fetchCities = useCallback(() => {\n    if (cityAux.length >= 3) {\n      const apiDomain = `https://api.weatherapi.com/v1/search.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${cityAux}`;\n      fetch(apiDomain)\n        .then((response) => {\n          return response.json();\n        })\n        .then((myJson) => {\n          setCities(myJson);\n        });\n    }\n  }, [cityAux]);\n\n  useEffect(() => {\n    fetchCities();\n  }, [cityAux, fetchCities]);\n\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"title-input\"\n          label=\"Title\"\n          value={title}\n          helperText={`${title.length}/30`}\n          fullWidth\n          onChange={changeTitle}\n          error={errorTitle}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${date.toDateString()}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"hour-input\"\n          label=\"Hour\"\n          type=\"time\"\n          fullWidth\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          className={classes.input}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300,\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <Autocomplete\n          id=\"city-auto-input\"\n          options={cities}\n          fullWidth\n          getOptionLabel={(option) => option.name}\n          // helperText=\"At least 3 chars\"\n          className={classes.input}\n          inputValue={cityAux}\n          margin=\"normal\"\n          onInputChange={(event, newInputValue) => {\n            if (event) {\n              if (event.type === 'change') {\n                setCityAux(newInputValue !== undefined ? newInputValue : '');\n              }\n              if (event.type === 'click') {\n                setCity(newInputValue !== undefined ? newInputValue : '');\n                setCityAux(newInputValue !== undefined ? newInputValue : '');\n              }\n            }\n          }}\n          renderInput={(params) => <TextField {...params} label=\"City\" />}\n        />\n      </Grid>\n      {city && (\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n              Weather\n            </Typography>\n          </Grid>\n          <Weather day={day} month={month} year={year} city={city} />\n        </Grid>\n      )}\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          Color\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <CirclePicker onChange={(newColor) => setColor(newColor)} color={color} />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onSaveReminder}>\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nReminderForm.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  saveReminder: PropTypes.func.isRequired,\n  reminder: PropTypes.instanceOf(Object),\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nReminderForm.defaultProps = {\n  reminder: {},\n  month: 0,\n  year: 0,\n};\n\nexport default withStyles(styles)(ReminderForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography, IconButton, Card, CardContent } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EventIcon from '@material-ui/icons/EventOutlined';\nimport PlaceIcon from '@material-ui/icons/PlaceOutlined';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport PaletteIcon from '@material-ui/icons/PaletteOutlined';\nimport ConfirmationModal from 'components/confirmationModal';\nimport { get } from 'lodash';\nimport Divider from '@material-ui/core/Divider';\nimport Weather from './weather';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 20,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  subtitle: {\n    fontSize: 15,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    fontSize: 13,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderInfo = ({ classes, reminder, deleteReminder, editReminder }) => {\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n\n  const onConfirmDelete = () => {\n    setShowDeleteConfirmation(false);\n    deleteReminder(reminder);\n  };\n\n  const onCancelDelete = () => setShowDeleteConfirmation(false);\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\">\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={editReminder}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={() => setShowDeleteConfirmation(true)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            {reminder.title}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Date\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <EventIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.date.toDateString()}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Hour\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <QueryBuilderIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${get(reminder, 'time', '')}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            City\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PlaceIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.city === '' ? 'Unspecified' : reminder.city}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        {reminder.city !== '' && (\n          <>\n            <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n              <Typography\n                className={classes.subtitle}\n                color=\"textSecondary\"\n                gutterBottom\n                align=\"center\"\n              >\n                Weather\n              </Typography>\n            </Grid>\n            <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n              <Weather\n                day={reminder.date.getDate()}\n                month={reminder.date.getMonth()}\n                year={reminder.date.getFullYear()}\n                city={reminder.city}\n              />\n            </Grid>\n            <Divider />\n          </>\n        )}\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Color\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PaletteIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Card style={{ backgroundColor: reminder.color.hex }}>\n              <CardContent />\n            </Card>\n          </Grid>\n        </Grid>\n        <Divider />\n      </Grid>\n      {showDeleteConfirmation && (\n        <ConfirmationModal\n          title=\"Are you sure you want to delete this reminder?\"\n          onConfirm={onConfirmDelete}\n          onCancel={onCancelDelete}\n        />\n      )}\n    </>\n  );\n};\n\nReminderInfo.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  reminder: PropTypes.instanceOf(Object).isRequired,\n  deleteReminder: PropTypes.func.isRequired,\n  editReminder: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ReminderInfo);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Card, Typography, Popover, Box } from '@material-ui/core';\n\nconst styles = (theme) => ({\n  popover: {\n    minWidth: '14vw',\n    width: '14vw',\n    borderRadius: 0,\n    minHeight: '10vh',\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  title: {\n    fontSize: 14,\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n});\nconst Reminders = ({ classes, reminders, showReminderInfo }) => {\n  const [showRemindersExpanse, setShowReminderExpanse] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const getRemindersDiff = () => reminders.length - 2;\n\n  const showAllRemindersExpanse = (newAnchorEl) => {\n    setShowReminderExpanse(true);\n    setAnchorEl(newAnchorEl);\n  };\n\n  const showAllReminders = () =>\n    reminders.map((reminderIterator, index) => (\n      <Card\n        key={`${reminderIterator.title}-${index}`}\n        style={{ backgroundColor: reminderIterator.color.hex }}\n        className={classes.clickable}\n        onClick={() => showReminderInfo({ ...reminderIterator, index })}\n      >\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {reminderIterator.title}\n        </Typography>\n      </Card>\n    ));\n\n  return reminders.length > 3 ? (\n    <>\n      {reminders.slice(0, 2).map((reminderIterator, index) => (\n        <Card\n          key={`${reminderIterator.title}-${index}`}\n          style={{ backgroundColor: reminderIterator.color.hex }}\n          className={classes.clickable}\n          onClick={() => showReminderInfo({ ...reminderIterator, index })}\n        >\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            {reminderIterator.title}\n          </Typography>\n        </Card>\n      ))}\n      <Card\n        key=\"more-reminders\"\n        style={{ backgroundColor: '#2196F3' }}\n        className={classes.clickable}\n        onClick={(e) => showAllRemindersExpanse(e.currentTarget)}\n      >\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`+${getRemindersDiff()}`}\n        </Typography>\n      </Card>\n      <Popover\n        id=\"reminders-expanse\"\n        open={showRemindersExpanse}\n        anchorEl={anchorEl}\n        onClose={() => {\n          setShowReminderExpanse(false);\n          setAnchorEl(null);\n        }}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n      >\n        <Box className={classes.popover}>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            Reminders\n          </Typography>\n          {showAllReminders()}\n        </Box>\n      </Popover>\n    </>\n  ) : (\n    showAllReminders()\n  );\n};\n\nReminders.propTypes = {\n  reminders: PropTypes.instanceOf(Array).isRequired,\n  classes: PropTypes.instanceOf(Object).isRequired,\n  showReminderInfo: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Reminders);\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Drawer,\n  IconButton,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport { get, assign } from 'lodash';\nimport moment from 'moment';\nimport RemindersContext from 'contexts/remindersContext';\nimport ConfirmationModal from 'components/confirmationModal';\nimport ReminderFrom from './reminderForm';\nimport ReminderInfo from './reminderInfo';\nimport Reminders from './reminders';\n\nconst drawerWidth = 350;\n\nconst styles = (theme) => ({\n  root: {\n    width: '13%',\n    minWidth: '13%',\n    borderRadius: 0,\n  },\n  content: {\n    padding: '1px',\n  },\n  title: {\n    fontSize: 14,\n    height: '22%',\n  },\n  actualDay: {\n    borderRadius: '50%',\n    background: theme.palette.primary.light,\n    padding: '3px',\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n  disabled: {\n    width: '13%',\n    minWidth: '13%',\n    borderRadius: 0,\n    background: '#EBEBE4',\n  },\n});\n\nconst sortRemindersByHour = (a, b) => {\n  const x = a.time.toLowerCase();\n  const y = b.time.toLowerCase();\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  return 0;\n};\n\nconst Day = ({ classes, disabled, day, month, year, height }) => {\n  const remindersContext = useContext(RemindersContext);\n  const [showReminderInfo, setShowReminderInfo] = useState(false);\n  const [showReminderAddEdit, setShowReminderAddEdit] = useState(false);\n  const [reminder, setReminder] = useState(null);\n  const [numberHover, setNumberHover] = useState(false);\n  const [showConfirmDeleteAll, setShowConfirmDeleteAll] = useState(false);\n  const reminderDate = new Date(year, month, day);\n  const allReminders = { ...remindersContext };\n  delete allReminders.updateReminders;\n  const reminders = get(remindersContext, `${year}.${month}.${day}`, []);\n  const setReminders = remindersContext.updateReminders;\n\n  const addOrEditReminder = (reminderToEdit) => {\n    setReminder(reminderToEdit);\n    setShowReminderAddEdit(true);\n    setShowReminderInfo(false);\n  };\n\n  const saveReminder = (newReminder) => {\n    if (!reminder) {\n      const newReminders = [...reminders, newReminder];\n      newReminders.sort(sortRemindersByHour);\n      const newAllReminders = { ...allReminders };\n      assign(newAllReminders, {\n        [year]: {\n          ...get(allReminders, `${year}`, {}),\n          [month]: {\n            ...get(allReminders, `${year}.${month}`, {}),\n            [day]: newReminders,\n          },\n        },\n      });\n      setReminders(newAllReminders);\n    } else {\n      const editedReminder = { ...newReminder };\n      delete editedReminder.index;\n      const newReminders = [...reminders];\n      newReminders[newReminder.index] = editedReminder;\n      newReminders.sort(sortRemindersByHour);\n      const newAllReminders = { ...allReminders };\n      assign(newAllReminders, {\n        [year]: {\n          ...get(allReminders, `${year}`, {}),\n          [month]: {\n            ...get(allReminders, `${year}.${month}`, {}),\n            [day]: newReminders,\n          },\n        },\n      });\n      setReminders(newAllReminders);\n    }\n    setShowReminderAddEdit(false);\n  };\n\n  const closeReminderInfo = () => {\n    setReminder(null);\n    setShowReminderInfo(false);\n    setShowReminderAddEdit(false);\n  };\n\n  const showReminderInfoDrawer = (reminderToShow) => {\n    setReminder(reminderToShow);\n    setShowReminderInfo(true);\n    setShowReminderAddEdit(false);\n  };\n\n  const deleteReminder = (reminderToDelete) => {\n    closeReminderInfo();\n    reminders.splice(reminderToDelete.index, 1);\n    const newAllReminders = { ...allReminders };\n    assign(newAllReminders, {\n      [year]: {\n        ...get(allReminders, `${year}`, {}),\n        [month]: {\n          ...get(allReminders, `${year}.${month}`, {}),\n          [day]: reminders,\n        },\n      },\n    });\n    setReminders(newAllReminders);\n  };\n\n  const showDeleteAllRemindersButton = () => numberHover && reminders.length > 0 && !disabled;\n\n  const deleteAllReminders = () => {\n    setShowConfirmDeleteAll(false);\n    const newAllReminders = { ...allReminders };\n    assign(newAllReminders, {\n      [year]: {\n        ...get(allReminders, `${year}`, {}),\n        [month]: {\n          ...get(allReminders, `${year}.${month}`, {}),\n          [day]: [],\n        },\n      },\n    });\n    setReminders(newAllReminders);\n  };\n\n  const cleanState = () => {\n    setShowReminderInfo(false);\n    setShowReminderAddEdit(false);\n    setReminder(null);\n    setNumberHover(false);\n    setShowConfirmDeleteAll(false);\n  };\n\n  const isActualDay = () => {\n    const acutalDay = new Date();\n    return moment(acutalDay).isSame(reminderDate, 'day');\n  };\n\n  const getHeightAction = () => {\n    let heightAction;\n    const diffLength = reminders.length >= 3 ? 3 : reminders.length;\n\n    switch (height) {\n      case '21vh':\n        heightAction = `${85 - 17 * diffLength}%`;\n        break;\n      case '16vh':\n        heightAction = `${75 - 20 * diffLength}%`;\n        break;\n      case '14vh':\n        heightAction = `${69 - 20 * diffLength}%`;\n        break;\n      default:\n        break;\n    }\n    return heightAction;\n  };\n\n  useEffect(() => {\n    cleanState();\n  }, [month, year]);\n\n  return (\n    <>\n      <Card\n        className={disabled ? classes.disabled : classes.root}\n        style={{ height }}\n        variant=\"outlined\"\n      >\n        <CardContent className={classes.content}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom={!showDeleteAllRemindersButton()}\n              align=\"center\"\n              onMouseEnter={() => setNumberHover(true)}\n              onMouseLeave={() => setNumberHover(false)}\n            >\n              {showDeleteAllRemindersButton() ? (\n                <IconButton\n                  aria-label=\"delete\"\n                  size=\"small\"\n                  onClick={() => setShowConfirmDeleteAll(true)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              ) : (\n                <span className={isActualDay() ? classes.actualDay : undefined}>{day}</span>\n              )}\n            </Typography>\n            {!disabled && (\n              <Reminders\n                reminders={reminders}\n                showReminderInfo={showReminderInfoDrawer}\n                height={height}\n              />\n            )}\n          </Grid>\n        </CardContent>\n        {!disabled && (\n          <CardActionArea\n            style={{\n              height: getHeightAction(),\n              maxHeight: getHeightAction(),\n            }}\n            onClick={() => addOrEditReminder(null)}\n          >\n            <CardContent />\n          </CardActionArea>\n        )}\n      </Card>\n      {showConfirmDeleteAll && (\n        <ConfirmationModal\n          onConfirm={deleteAllReminders}\n          onCancel={() => setShowConfirmDeleteAll(false)}\n          title=\"Are you sure you want to delete ALL the reminders?\"\n        />\n      )}\n      <Drawer\n        open={showReminderInfo || showReminderAddEdit}\n        anchor=\"right\"\n        onClose={closeReminderInfo}\n        classes={{ paper: classes.drawer }}\n      >\n        {showReminderInfo && (\n          <ReminderInfo\n            reminder={reminder}\n            editReminder={() => addOrEditReminder(reminder)}\n            deleteReminder={deleteReminder}\n          />\n        )}\n        {showReminderAddEdit && (\n          <ReminderFrom\n            date={reminderDate}\n            reminder={reminder}\n            saveReminder={saveReminder}\n            day={day}\n            month={month}\n            year={year}\n          />\n        )}\n      </Drawer>\n    </>\n  );\n};\n\nDay.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  disabled: PropTypes.bool,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n  height: PropTypes.string,\n};\n\nDay.defaultProps = {\n  disabled: false,\n  month: 0,\n  year: 0,\n  height: '16.75vh',\n};\n\nexport default withStyles(styles)(Day);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Card, Typography } from '@material-ui/core';\nimport days from 'constants/days';\n\nconst styles = (theme) => ({\n  root: {\n    minWidth: '13%',\n    width: '13%',\n    'max-height': '5vh',\n    'border-radius': 0,\n    background: theme.palette.primary.light,\n  },\n  shortTitle: {\n    display: 'inline',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  longTitle: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'inline',\n    },\n  },\n});\n\nconst DaysHeader = ({ classes }) =>\n  days.map((day) => (\n    <Card key={`header-${day.short}`} className={classes.root} variant=\"outlined\">\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Typography\n          variant=\"subtitle1\"\n          className={classes.longTitle}\n          color=\"textSecondary\"\n          gutterBottom\n          align=\"center\"\n        >\n          {day.long}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          className={classes.shortTitle}\n          color=\"textSecondary\"\n          gutterBottom\n          align=\"center\"\n        >\n          {day.short}\n        </Typography>\n      </Grid>\n    </Card>\n  ));\n\nDaysHeader.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Day from './day';\nimport DaysHeader from './daysHeader';\n\nconst Month = ({ month, year }) => {\n  const actualMonth = new Date(year, month + 1, 0);\n  const daysAmount = actualMonth.getDate();\n  const actualMonthFirstDay = new Date(year, month, 1);\n  const firstDay = actualMonthFirstDay.getDay();\n\n  const getLeftDisabledDays = () => {\n    const newMonth = month > 0 ? month : 12;\n    const lastMonth = new Date(year, newMonth, 0);\n    const lastMonthDaysAmount = lastMonth.getDate();\n\n    return [...Array(firstDay)].map((item, index) => lastMonthDaysAmount - firstDay + 1 + index);\n  };\n\n  const getNormalDays = () => {\n    const days = [...Array(daysAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getRightDisabledDays = () => {\n    const nextSevenMultiplo = Math.ceil((daysAmount + firstDay) / 7) * 7;\n    const disabledAmount = nextSevenMultiplo - (daysAmount + firstDay);\n\n    const days = [...Array(disabledAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getHeight = () => {\n    const normalDaysCount = getNormalDays().length;\n    const leftDisabledDays = getLeftDisabledDays().length;\n    const rightDisabledDays = getRightDisabledDays().length;\n    let height = null;\n    switch ((normalDaysCount + leftDisabledDays + rightDisabledDays) / 7) {\n      case 4:\n        height = '21vh';\n        break;\n      case 5:\n        height = '16vh';\n        break;\n      case 6:\n        height = '14vh';\n        break;\n      default:\n        break;\n    }\n    return height;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\n      <DaysHeader />\n      {getLeftDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} height={getHeight()} />\n      ))}\n      {getNormalDays().map((day) => (\n        <Day key={`enabled-${day}`} day={day} month={month} year={year} height={getHeight()} />\n      ))}\n      {getRightDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} height={getHeight()} />\n      ))}\n    </Grid>\n  );\n};\n\nMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default Month;\n","import React, { useState } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport RemindersContext from 'contexts/remindersContext';\nimport HeadBar from './components/headBar';\nimport Month from './components/month';\n\nconst CalendarView = () => {\n  const getActualMonth = () => {\n    const actualDate = new Date();\n    return actualDate.getMonth();\n  };\n  const getActualYear = () => {\n    const actualDate = new Date();\n    return actualDate.getFullYear();\n  };\n\n  const [month, setMonth] = useState(getActualMonth());\n  const [year, setYear] = useState(getActualYear);\n  const [remindersDB, setRemindersDB] = useState({});\n\n  return (\n    <>\n      <HeadBar month={month} year={year} setNewMonth={setMonth} setNewYear={setYear} />\n      <Toolbar />\n      <RemindersContext.Provider\n        value={{\n          ...remindersDB,\n          updateReminders: setRemindersDB,\n        }}\n      >\n        <Month month={month} year={year} />\n      </RemindersContext.Provider>\n    </>\n  );\n};\n\nexport default CalendarView;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarView from './views/calendarView';\n\nconst root = <CalendarView />;\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}