{"version":3,"sources":["constants/months.js","constants/days.js","views/calendarView/components/headBar.js","views/calendarView/components/reminderForm.js","views/calendarView/components/day.js","views/calendarView/components/daysHeader.js","views/calendarView/components/month.js","views/calendarView/index.js","index.js"],"names":["module","exports","withStyles","theme","appBar","backgroundColor","palette","common","white","toolbar","display","justifyContent","monthYearText","fontWeight","classes","month","year","className","root","AppBar","position","Toolbar","Typography","variant","color","monthsNames","title","fontSize","marginLeft","spacing","marginRight","container","flexWrap","width","input","date","saveReminder","useState","setTitle","time","setTime","city","setCity","errorTitle","setErrorTitle","hex","source","setColor","cleanState","Grid","direction","justify","alignItems","item","TextField","id","label","value","helperText","length","fullWidth","onChange","e","target","error","margin","gutterBottom","align","toDateString","type","InputLabelProps","shrink","inputProps","step","newColor","Button","onClick","Day","disabled","day","showCreateReminder","setShowCreateReminder","reminders","setReminders","reminderDate","Date","Card","CardContent","content","map","reminder","index","key","style","CardActionArea","Drawer","open","anchor","onClose","paper","drawer","defaultProps","minWidth","borderRadius","height","padding","days","Month","daysAmount","getDate","firstDay","getDay","lastMonthDaysAmount","Array","getLeftDisabledDays","disabledDay","keys","shift","getNormalDays","disabledAmount","Math","ceil","getRightDisabledDays","CalendarView","selectedMonth","getMonth","selectedYear","getFullYear","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4698c4c1.chunk.js","sourcesContent":["module.exports = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","module.exports = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, withStyles } from '@material-ui/core';\nimport monthsNames from 'constants/months';\n\nconst styles = (theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  monthYearText: {\n    fontWeight: 300,\n  },\n});\n\nconst HeadBar = ({ classes, month, year }) => (\n  <div className={classes.root}>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <Typography\n            variant=\"h4\"\n            className={classes.monthYearText}\n            display=\"inline\"\n            color=\"primary\"\n          >\n            {`${monthsNames[month]} ${year}`}\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nHeadBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(HeadBar);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, TextField, Button, Typography } from '@material-ui/core';\nimport { CirclePicker } from 'react-color';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 13,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderForm = ({ classes, date, saveReminder }) => {\n  const [title, setTitle] = useState('');\n  const [time, setTime] = useState('09:30');\n  const [city, setCity] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [color, setColor] = useState({\n    hex: '#607d8b',\n    source: 'hex',\n  });\n\n  const onSaveReminder = () => {\n    if (title.length <= 0) {\n      setErrorTitle(true);\n    }\n\n    if (title.length <= 30 && title.length > 0) {\n      saveReminder({ title, time, date, city, color });\n      cleanState();\n    }\n  };\n\n  const cleanState = () => {\n    setTitle('');\n    setTime('09:30');\n    setCity('');\n    setColor({\n      hex: '#607d8b',\n      source: 'hex',\n    });\n  };\n  const changeTitle = (e) => {\n    setErrorTitle(e.target.value.length > 30);\n    setTitle(e.target.value);\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"title-input\"\n          label=\"Title\"\n          value={title}\n          helperText={`${title.length}/30`}\n          fullWidth\n          onChange={changeTitle}\n          error={errorTitle}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${date.toDateString()}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"hour-input\"\n          label=\"Hour\"\n          type=\"time\"\n          fullWidth\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          className={classes.input}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300,\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"city-input\"\n          label=\"City\"\n          value={city}\n          fullWidth\n          onChange={(e) => setCity(e.target.value)}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${'Color'}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <CirclePicker onChange={(newColor) => setColor(newColor)} color={color} />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onSaveReminder}>\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nReminderForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  saveReminder: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ReminderForm);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Drawer,\n} from '@material-ui/core';\nimport ReminderFrom from './reminderForm';\n\nconst drawerWidth = 300;\n\nconst styles = (theme) => ({\n  root: {\n    minWidth: '14%',\n    borderRadius: 0,\n    height: '16.75vh',\n  },\n  content: {\n    padding: '0px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n});\n\nconst Day = ({ classes, disabled, day, month, year }) => {\n  const [showCreateReminder, setShowCreateReminder] = useState(false);\n  const [reminders, setReminders] = useState([]);\n  const reminderDate = new Date(year, month, day);\n\n  const addOrEditReminder = () => {\n    setShowCreateReminder(true);\n  };\n\n  const saveReminder = (reminder) => {\n    setReminders([...reminders, reminder]);\n    setShowCreateReminder(false);\n  };\n\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent className={classes.content}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n              {day}\n            </Typography>\n            {!disabled &&\n              reminders.map((reminder, index) => (\n                <Card\n                  key={`${reminder.title}-${index}`}\n                  style={{ backgroundColor: reminder.color.hex }}\n                >\n                  {/* TODO: COMING SOON: New component */}\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    {reminder.title}\n                  </Typography>\n                </Card>\n              ))}\n          </Grid>\n        </CardContent>\n        {!disabled && (\n          <CardActionArea onClick={addOrEditReminder}>\n            <CardContent></CardContent>\n          </CardActionArea>\n        )}\n      </Card>\n      <Drawer\n        open={showCreateReminder}\n        anchor=\"right\"\n        onClose={() => setShowCreateReminder(false)}\n        classes={{ paper: classes.drawer }}\n      >\n        <ReminderFrom date={reminderDate} saveReminder={saveReminder} />\n      </Drawer>\n    </>\n  );\n};\n\nDay.propTypes = {\n  classes: PropTypes.object.isRequired,\n  disabled: PropTypes.bool,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nDay.defaultProps = {\n  disabled: false,\n  month: 0,\n  year: 0,\n};\n\nexport default withStyles(styles)(Day);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport days from 'constants/days';\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    'max-height': '5vh',\n    'border-radius': 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n});\n\nconst DaysHeader = ({ classes }) =>\n  days.map((day) => (\n    <Card key={`header-${day}`} className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {day}\n        </Typography>\n      </CardContent>\n    </Card>\n  ));\n\nDaysHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Day from './day';\nimport DaysHeader from './daysHeader';\n\nconst Month = ({ month, year }) => {\n  const actualMonth = new Date(year, month + 1, 0);\n  const daysAmount = actualMonth.getDate();\n  const actualMonthFirstDay = new Date(year, month, 1);\n  const firstDay = actualMonthFirstDay.getDay();\n\n  const getLeftDisabledDays = () => {\n    const newMonth = month > 0 ? month : 12;\n    const lastMonth = new Date(year, newMonth, 0);\n    const lastMonthDaysAmount = lastMonth.getDate();\n\n    return [...Array(firstDay)].map((item, index) => lastMonthDaysAmount - firstDay + 1 + index);\n  };\n\n  const getNormalDays = () => {\n    const days = [...Array(daysAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getRightDisabledDays = () => {\n    const nextSevenMultiplo = Math.ceil((daysAmount + firstDay) / 7) * 7;\n    const disabledAmount = nextSevenMultiplo - (daysAmount + firstDay);\n\n    const days = [...Array(disabledAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\n      <DaysHeader />\n      {getLeftDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n      {getNormalDays().map((day) => (\n        <Day key={`enabled-${day}`} day={day} month={month} year={year} />\n      ))}\n      {getRightDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n    </Grid>\n  );\n};\n\nMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default Month;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport HeadBar from './components/headBar';\nimport Month from './components/month';\n\nconst CalendarView = () => {\n  const getActualMonth = () => {\n    const actualDate = new Date();\n    return actualDate.getMonth();\n  };\n  const getActualYear = () => {\n    const actualDate = new Date();\n    return actualDate.getFullYear();\n  };\n\n  const selectedMonth = getActualMonth();\n  const selectedYear = getActualYear();\n\n  return (\n    <React.Fragment>\n      <HeadBar month={selectedMonth} year={selectedYear} />\n      <Toolbar />\n      <Month month={selectedMonth} year={selectedYear} />\n    </React.Fragment>\n  );\n};\n\nexport default CalendarView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarView from './views/calendarView';\n\nconst root = <CalendarView />;\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}