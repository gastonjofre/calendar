{"version":3,"sources":["constants/months.js","constants/days.js","views/calendarView/components/headBar.js","views/calendarView/components/reminderForm.js","components/confirmationModal.js","views/calendarView/components/reminderInfo.js","views/calendarView/components/day.js","views/calendarView/components/daysHeader.js","views/calendarView/components/month.js","views/calendarView/index.js","index.js"],"names":["module","exports","withStyles","theme","appBar","backgroundColor","palette","common","white","toolbar","display","justifyContent","monthYearText","fontWeight","classes","month","year","className","root","AppBar","position","Toolbar","Typography","variant","color","monthsNames","ReminderForm","date","saveReminder","reminder","useState","get","title","setTitle","time","setTime","city","setCity","errorTitle","setErrorTitle","hex","source","setColor","Grid","container","direction","justify","alignItems","spacing","item","TextField","id","label","value","helperText","length","fullWidth","onChange","e","target","error","input","margin","gutterBottom","align","toDateString","type","InputLabelProps","shrink","inputProps","step","newColor","Button","onClick","index","defaultProps","fontSize","marginLeft","marginRight","flexWrap","width","paper","background","border","boxShadow","shadows","padding","top","left","transform","onCancel","onConfirm","Modal","open","onClose","aria-labelledby","aria-describedby","subtitle","content","deleteReminder","editReminder","showDeleteConfirmation","setShowDeleteConfirmation","IconButton","aria-label","component","xs","Divider","Card","style","CardContent","sortRemindersByHour","a","b","x","toLowerCase","y","Day","disabled","day","showReminderInfo","setShowReminderInfo","showReminderAddEdit","setShowReminderAddEdit","reminders","setReminders","setReminder","reminderDate","Date","addOrEditReminder","reminderToEdit","closeReminderInfo","map","reminderIterator","key","reminderToShow","CardActionArea","Drawer","anchor","drawer","reminderToDelete","splice","newReminder","editedReminder","newReminders","sort","minWidth","borderRadius","height","days","Month","daysAmount","getDate","firstDay","getDay","lastMonthDaysAmount","Array","getLeftDisabledDays","disabledDay","keys","shift","getNormalDays","disabledAmount","Math","ceil","getRightDisabledDays","CalendarView","selectedMonth","getMonth","selectedYear","getFullYear","Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a18d93c.chunk.js","sourcesContent":["module.exports = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","module.exports = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar, Typography, withStyles } from '@material-ui/core';\nimport monthsNames from 'constants/months';\n\nconst styles = (theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.common.white,\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  monthYearText: {\n    fontWeight: 300,\n  },\n});\n\nconst HeadBar = ({ classes, month, year }) => (\n  <div className={classes.root}>\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <Typography\n            variant=\"h4\"\n            className={classes.monthYearText}\n            display=\"inline\"\n            color=\"primary\"\n          >\n            {`${monthsNames[month]} ${year}`}\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  </div>\n);\n\nHeadBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(HeadBar);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, TextField, Button, Typography } from '@material-ui/core';\nimport { CirclePicker } from 'react-color';\nimport { get } from 'lodash';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 13,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderForm = ({ classes, date, saveReminder, reminder }) => {\n  const [title, setTitle] = useState(get(reminder, 'title', ''));\n  const [time, setTime] = useState(get(reminder, 'time', '09:30'));\n  const [city, setCity] = useState(get(reminder, 'city', ''));\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [color, setColor] = useState(\n    get(reminder, 'color', {\n      hex: '#607d8b',\n      source: 'hex',\n    })\n  );\n\n  const cleanState = () => {\n    setTitle('');\n    setTime('09:30');\n    setCity('');\n    setColor({\n      hex: '#607d8b',\n      source: 'hex',\n    });\n  };\n\n  const onSaveReminder = () => {\n    if (title.length <= 0) {\n      setErrorTitle(true);\n    }\n\n    if (title.length <= 30 && title.length > 0) {\n      saveReminder({\n        title,\n        time,\n        date,\n        city,\n        color,\n        index: get(reminder, 'index', null),\n      });\n      cleanState();\n    }\n  };\n\n  const changeTitle = (e) => {\n    setErrorTitle(e.target.value.length > 30);\n    setTitle(e.target.value);\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"title-input\"\n          label=\"Title\"\n          value={title}\n          helperText={`${title.length}/30`}\n          fullWidth\n          onChange={changeTitle}\n          error={errorTitle}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${date.toDateString()}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"hour-input\"\n          label=\"Hour\"\n          type=\"time\"\n          fullWidth\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          className={classes.input}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300,\n          }}\n        />\n      </Grid>\n      <Grid item className={classes.container}>\n        <TextField\n          id=\"city-input\"\n          label=\"City\"\n          value={city}\n          fullWidth\n          onChange={(e) => setCity(e.target.value)}\n          className={classes.input}\n          margin=\"normal\"\n        />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {`${'Color'}`}\n        </Typography>\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <CirclePicker onChange={(newColor) => setColor(newColor)} color={color} />\n      </Grid>\n      <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onSaveReminder}>\n          Save\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nReminderForm.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  saveReminder: PropTypes.func.isRequired,\n  reminder: PropTypes.instanceOf(Object),\n};\n\nReminderForm.defaultProps = {\n  reminder: {},\n};\n\nexport default withStyles(styles)(ReminderForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 20,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n});\n\nconst ConfirmationModal = ({ classes, title, onCancel, onConfirm }) => (\n  <Modal\n    open\n    onClose={onCancel}\n    aria-labelledby=\"delete-reminder\"\n    aria-describedby=\"delete-reminder\"\n  >\n    <div className={classes.paper}>\n      <Typography className={classes.title} gutterBottom align=\"center\">\n        {title}\n      </Typography>\n      <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onConfirm}>\n          Confirm\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>\n      </Grid>\n    </div>\n  </Modal>\n);\n\nConfirmationModal.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ConfirmationModal);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, Grid, Typography, IconButton, Card, CardContent } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EventIcon from '@material-ui/icons/Event';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport ConfirmationModal from 'components/confirmationModal';\nimport { get } from 'lodash';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = (theme) => ({\n  title: {\n    fontSize: 25,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  subtitle: {\n    fontSize: 20,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  content: {\n    fontSize: 15,\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n  },\n});\n\nconst ReminderInfo = ({ classes, reminder, deleteReminder, editReminder }) => {\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n\n  const onConfirmDelete = () => {\n    setShowDeleteConfirmation(false);\n    deleteReminder(reminder);\n  };\n\n  const onCancelDelete = () => setShowDeleteConfirmation(false);\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"stretch\" spacing={3}>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n        >\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={editReminder}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={() => setShowDeleteConfirmation(true)}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n            {reminder.title}\n          </Typography>\n        </Grid>\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Date\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <EventIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.date.toDateString()}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Hour\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <QueryBuilderIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${get(reminder, 'time', '')}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            City\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PlaceIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Typography\n              className={classes.content}\n              color=\"textSecondary\"\n              gutterBottom\n              align=\"justify\"\n            >\n              {`${reminder.city === '' ? 'Unspecified' : reminder.city}`}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Grid item className={classes.container} container direction=\"row\" justify=\"center\">\n          <Typography\n            className={classes.subtitle}\n            color=\"textSecondary\"\n            gutterBottom\n            align=\"center\"\n          >\n            Color\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={3} container direction=\"row\" justify=\"center\">\n            <PaletteIcon />\n          </Grid>\n          <Grid item xs={9}>\n            <Card style={{ backgroundColor: reminder.color.hex }}>\n              <CardContent />\n            </Card>\n          </Grid>\n        </Grid>\n        <Divider />\n      </Grid>\n      {showDeleteConfirmation && (\n        <ConfirmationModal\n          title=\"Are you sure you want to delete this reminder?\"\n          onConfirm={onConfirmDelete}\n          onCancel={onCancelDelete}\n        />\n      )}\n    </>\n  );\n};\n\nReminderInfo.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  reminder: PropTypes.instanceOf(Object).isRequired,\n  deleteReminder: PropTypes.func.isRequired,\n  editReminder: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ReminderInfo);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Drawer,\n} from '@material-ui/core';\nimport ReminderFrom from './reminderForm';\nimport ReminderInfo from './reminderInfo';\n\nconst drawerWidth = 300;\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    borderRadius: 0,\n    height: '16.75vh',\n  },\n  content: {\n    padding: '0px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  drawer: {\n    width: drawerWidth,\n  },\n});\n\nconst sortRemindersByHour = (a, b) => {\n  const x = a.time.toLowerCase();\n  const y = b.time.toLowerCase();\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  return 0;\n};\n\nconst Day = ({ classes, disabled, day, month, year }) => {\n  const [showReminderInfo, setShowReminderInfo] = useState(false);\n  const [showReminderAddEdit, setShowReminderAddEdit] = useState(false);\n  const [reminders, setReminders] = useState([]);\n  const [reminder, setReminder] = useState(null);\n  const reminderDate = new Date(year, month, day);\n\n  const addOrEditReminder = (reminderToEdit) => {\n    setReminder(reminderToEdit);\n    setShowReminderAddEdit(true);\n    setShowReminderInfo(false);\n  };\n\n  const saveReminder = (newReminder) => {\n    if (!reminder) {\n      const newReminders = [...reminders, newReminder];\n      newReminders.sort(sortRemindersByHour);\n      setReminders(newReminders);\n    } else {\n      const editedReminder = { ...newReminder };\n      delete editedReminder.index;\n      const newReminders = [...reminders];\n      newReminders[newReminder.index] = editedReminder;\n      newReminders.sort(sortRemindersByHour);\n      setReminders([...newReminders]);\n    }\n    setShowReminderAddEdit(false);\n  };\n\n  const closeReminderInfo = () => {\n    setReminder(null);\n    setShowReminderInfo(false);\n    setShowReminderAddEdit(false);\n  };\n\n  const showReminderInfoDrawer = (reminderToShow) => {\n    setReminder(reminderToShow);\n    setShowReminderInfo(true);\n    setShowReminderAddEdit(false);\n  };\n\n  const deleteReminder = (reminderToDelete) => {\n    closeReminderInfo();\n    reminders.splice(reminderToDelete.index, 1);\n    setReminders([...reminders]);\n  };\n\n  return (\n    <>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardContent className={classes.content}>\n          <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n              {day}\n            </Typography>\n            {!disabled &&\n              reminders.map((reminderIterator, index) => (\n                <Card\n                  key={`${reminderIterator.title}-${index}`}\n                  style={{ backgroundColor: reminderIterator.color.hex }}\n                  onClick={() => showReminderInfoDrawer({ ...reminderIterator, index })}\n                >\n                  {/* TODO: COMING SOON: New component */}\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    {reminderIterator.title}\n                  </Typography>\n                </Card>\n              ))}\n          </Grid>\n        </CardContent>\n        {!disabled && (\n          <CardActionArea onClick={() => addOrEditReminder(null)}>\n            <CardContent />\n          </CardActionArea>\n        )}\n      </Card>\n      <Drawer\n        open={showReminderInfo || showReminderAddEdit}\n        anchor=\"right\"\n        onClose={closeReminderInfo}\n        classes={{ paper: classes.drawer }}\n      >\n        {showReminderInfo && (\n          <ReminderInfo\n            reminder={reminder}\n            editReminder={() => addOrEditReminder(reminder)}\n            deleteReminder={deleteReminder}\n          />\n        )}\n        {showReminderAddEdit && (\n          <ReminderFrom date={reminderDate} reminder={reminder} saveReminder={saveReminder} />\n        )}\n      </Drawer>\n    </>\n  );\n};\n\nDay.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  disabled: PropTypes.bool,\n  day: PropTypes.number.isRequired,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nDay.defaultProps = {\n  disabled: false,\n  month: 0,\n  year: 0,\n};\n\nexport default withStyles(styles)(Day);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport days from 'constants/days';\n\nconst styles = () => ({\n  root: {\n    minWidth: '14%',\n    'max-height': '5vh',\n    'border-radius': 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n});\n\nconst DaysHeader = ({ classes }) =>\n  days.map((day) => (\n    <Card key={`header-${day}`} className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom align=\"center\">\n          {day}\n        </Typography>\n      </CardContent>\n    </Card>\n  ));\n\nDaysHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DaysHeader);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Day from './day';\nimport DaysHeader from './daysHeader';\n\nconst Month = ({ month, year }) => {\n  const actualMonth = new Date(year, month + 1, 0);\n  const daysAmount = actualMonth.getDate();\n  const actualMonthFirstDay = new Date(year, month, 1);\n  const firstDay = actualMonthFirstDay.getDay();\n\n  const getLeftDisabledDays = () => {\n    const newMonth = month > 0 ? month : 12;\n    const lastMonth = new Date(year, newMonth, 0);\n    const lastMonthDaysAmount = lastMonth.getDate();\n\n    return [...Array(firstDay)].map((item, index) => lastMonthDaysAmount - firstDay + 1 + index);\n  };\n\n  const getNormalDays = () => {\n    const days = [...Array(daysAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  const getRightDisabledDays = () => {\n    const nextSevenMultiplo = Math.ceil((daysAmount + firstDay) / 7) * 7;\n    const disabledAmount = nextSevenMultiplo - (daysAmount + firstDay);\n\n    const days = [...Array(disabledAmount + 1).keys()];\n    days.shift();\n    return days;\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\n      <DaysHeader />\n      {getLeftDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n      {getNormalDays().map((day) => (\n        <Day key={`enabled-${day}`} day={day} month={month} year={year} />\n      ))}\n      {getRightDisabledDays().map((disabledDay) => (\n        <Day key={`disabled-${disabledDay}`} disabled day={disabledDay} />\n      ))}\n    </Grid>\n  );\n};\n\nMonth.propTypes = {\n  month: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nexport default Month;\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport HeadBar from './components/headBar';\nimport Month from './components/month';\n\nconst CalendarView = () => {\n  const getActualMonth = () => {\n    const actualDate = new Date();\n    return actualDate.getMonth();\n  };\n  const getActualYear = () => {\n    const actualDate = new Date();\n    return actualDate.getFullYear();\n  };\n\n  const selectedMonth = getActualMonth();\n  const selectedYear = getActualYear();\n\n  return (\n    <React.Fragment>\n      <HeadBar month={selectedMonth} year={selectedYear} />\n      <Toolbar />\n      <Month month={selectedMonth} year={selectedYear} />\n    </React.Fragment>\n  );\n};\n\nexport default CalendarView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarView from './views/calendarView';\n\nconst root = <CalendarView />;\n\nReactDOM.render(root, document.getElementById('root'));\n"],"sourceRoot":""}